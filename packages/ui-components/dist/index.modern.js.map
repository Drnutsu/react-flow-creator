{"version":3,"file":"index.modern.js","sources":["../../react-flow-core/dist/store/form/actionTypes.js","../../react-flow-core/dist/store/form/actions.js","../src/form/form-generator.tsx","../src/form/index.tsx","../src/card/index.tsx","../src/index.tsx"],"sourcesContent":["export const UPDATE_FORM_UI = 'UPDATE_FORM_UI';\nexport const SUBMIT_FORM_UI = 'SUBMIT_FORM_UI';\n","import { UPDATE_FORM_UI, SUBMIT_FORM_UI } from './actionTypes';\n// TODO: form config\nexport const updateFormUI = (payload) => ({\n    type: UPDATE_FORM_UI,\n    payload\n});\nexport const submitForm = (payload) => ({\n    type: SUBMIT_FORM_UI,\n    payload\n});\n","import React from 'react'\nimport { Form, Input, InputNumber, Select, DatePicker, Button } from 'antd'\nimport { FormItemProps, FormGeneratorProps, FormElementTypeKeys } from './types'\n\nexport default function FormGenerator({\n  form,\n  formItems,\n  submitText = 'save',\n  onSubmit,\n  onFailed,\n  isInline = false,\n  submitButtonLoading = false,\n  ...props\n}: FormGeneratorProps) {\n  const renderSearchItemByType = (type: string, item: FormItemProps) => {\n    switch (type) {\n      case 'input':\n        return <Input {...item} />\n      case 'inputNumber':\n        return <InputNumber {...item} />\n      case 'textArea':\n        return <Input.TextArea rows={4} {...item} />\n      case 'select':\n        return (\n          <Select {...item}>\n            {item.options &&\n              item.options.map(({ value, text }) => (\n                <Select.Option className='text-black' key={value} value={value}>\n                  {text}\n                </Select.Option>\n              ))}\n          </Select>\n        )\n      case 'date':\n        return <DatePicker {...item} />\n      case 'rangeDate':\n        // TODO : range date picker not include in the passing props, bacause type is conflict\n        const { placeholder, ...rest } = item\n        return <DatePicker.RangePicker format='YYYY-MM-DD' {...rest} />\n      default:\n        throw new Error(\n          `Component Type ${type} is not support. please check searchItems data.`\n        )\n    }\n  }\n\n  const renderFormItems = () => (\n    <div className={`flex ${!isInline && 'flex-col'}`}>\n      {formItems.map(\n        ({ type, ...item }: { type: FormElementTypeKeys } & FormItemProps) =>\n          isInline ? (\n            <Form.Item name={item.name} className='mb-0' label={item.label}>\n              {renderSearchItemByType(type, item)}\n            </Form.Item>\n          ) : (\n            <div\n              key={item.name}\n              className={`w-${item.span ? item.span / 2 : 12}/12`}\n            >\n              <Form.Item name={item?.name} label={item.label}>\n                {renderSearchItemByType(type, item)}\n              </Form.Item>\n            </div>\n          )\n      )}\n    </div>\n  )\n\n  return (\n    <Form\n      className='search-area'\n      {...props}\n      onFinish={onSubmit}\n      onFinishFailed={onFailed}\n    >\n      {isInline ? (\n        <div className='inline-flex'>\n          <div className='flex items-center'>{renderFormItems()}</div>\n          <div className='flex items-center'>\n            <Button\n              children={submitText}\n              color='default'\n              htmlType='submit'\n              key='submit'\n              loading={submitButtonLoading}\n            />\n          </div>\n        </div>\n      ) : (\n        <div className='flex flex-col'>\n          <div className='flex-1'>{renderFormItems()}</div>\n          <div className='flex-1'>\n            <Button\n              children={submitText}\n              color='default'\n              htmlType='submit'\n              key='submit'\n              loading={submitButtonLoading}\n            />\n          </div>\n        </div>\n      )}\n    </Form>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form as AntdForm } from 'antd'\n\nimport { form as formCore } from 'react-flow-core'\nimport FormGenerator from './form-generator'\n\nconst { useForm } = AntdForm\n\n// const mockConfigs = [\n//   {\n//     type: 'input',\n//     name: 'simple_text_input',\n//     label: 'Simple Text Input',\n//     placeholder: 'just simple text input type here.'\n//   },\n//   {\n//     type: 'select',\n//     name: 'required_selector',\n//     label: 'Choose to require or not',\n//     placeholder: 'select should we require or not',\n//     showSearch: true,\n//     options: [\n//       { value: true, text: 'required' },\n//       { value: false, text: 'not required' }\n//     ]\n//   }\n// ]\n\nexport default function FormBase() {\n  const form = useForm()\n  const dispatch = useDispatch()\n  const onSubmit = useCallback((result) => {\n    console.log(' submit form ui : ', result)\n    dispatch(formCore.actions.submitForm(result))\n  }, [])\n  const onFailed = useCallback((err) => {\n    console.log(err)\n  }, [])\n  const configs = useSelector((state: any) => {\n    console.log(' state : ', state)\n    return state?.form?.config\n  })\n  console.log(' configs at FormBase : ', configs)\n  const Form = useCallback(\n    () => (\n      <FormGenerator\n        formItems={configs || []}\n        form={form}\n        onSubmit={onSubmit}\n        onFailed={onFailed}\n        submitText='Next'\n      />\n    ),\n    [onSubmit, configs, form]\n  )\n  return (\n    <div className='max-w-md py-4 px-8 bg-white shadow-lg rounded-lg'>\n      <Form />\n    </div>\n  )\n}\n","import React, { ReactChild } from 'react'\nimport cx from 'classnames'\n\nexport default function Card({\n  children,\n  className\n}: {\n  children: ReactChild\n  className: string\n}) {\n  return (\n    <div\n      className={cx(\n        'max-w-md py-4 px-8 bg-white shadow-lg rounded-lg',\n        className\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport 'antd/dist/antd.css'\nimport './styles/tailwind.css'\nimport styles from './styles.module.css'\nimport { Button } from 'antd'\n\n// Form\nimport FormBase from './form'\nimport Card from './card'\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport const AntdButton = () => {\n  return <Button>CONFIRM!!</Button>\n}\n\nexport { FormBase, Card }\n"],"names":["SUBMIT_FORM_UI","submitForm","payload","type","FormGenerator","form","formItems","submitText","onSubmit","onFailed","isInline","submitButtonLoading","props","renderSearchItemByType","item","React","Input","InputNumber","TextArea","rows","Select","options","map","value","text","Option","className","key","DatePicker","placeholder","rest","RangePicker","format","Error","renderFormItems","Form","Item","name","label","span","onFinish","onFinishFailed","Button","children","color","htmlType","loading","useForm","AntdForm","FormBase","dispatch","useDispatch","useCallback","result","console","log","formCore","err","configs","useSelector","state","config","Card","cx","ExampleComponent","styles","test","AntdButton"],"mappings":"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"}
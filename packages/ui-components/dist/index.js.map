{"version":3,"file":"index.js","sources":["../src/form/form-generator.tsx","../src/form/index.tsx","../src/card/index.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Form, Input, InputNumber, Select, DatePicker, Button } from 'antd'\nimport { FormItemProps, FormGeneratorProps, FormElementTypeKeys } from './types'\n\nexport default function FormGenerator({\n  form,\n  formItems,\n  submitText = 'save',\n  onSubmit,\n  onFailed,\n  isInline = false,\n  submitButtonLoading = false,\n  ...props\n}: FormGeneratorProps) {\n  const renderSearchItemByType = (type: string, item: FormItemProps) => {\n    switch (type) {\n      case 'input':\n        return <Input {...item} />\n      case 'inputNumber':\n        return <InputNumber {...item} />\n      case 'textArea':\n        return <Input.TextArea rows={4} {...item} />\n      case 'select':\n        return (\n          <Select {...item}>\n            {item.options &&\n              item.options.map(({ value, text }) => (\n                <Select.Option className='text-black' key={value} value={value}>\n                  {text}\n                </Select.Option>\n              ))}\n          </Select>\n        )\n      case 'date':\n        return <DatePicker {...item} />\n      case 'rangeDate':\n        // TODO : range date picker not include in the passing props, bacause type is conflict\n        const { placeholder, ...rest } = item\n        return <DatePicker.RangePicker format='YYYY-MM-DD' {...rest} />\n      default:\n        throw new Error(\n          `Component Type ${type} is not support. please check searchItems data.`\n        )\n    }\n  }\n\n  const renderFormItems = () => (\n    <div className={`flex ${!isInline && 'flex-col'}`}>\n      {formItems.map(\n        ({ type, ...item }: { type: FormElementTypeKeys } & FormItemProps) =>\n          isInline ? (\n            <Form.Item name={item.name} className='mb-0' label={item.label}>\n              {renderSearchItemByType(type, item)}\n            </Form.Item>\n          ) : (\n            <div\n              key={item.name}\n              className={`w-${item.span ? item.span / 2 : 12}/12`}\n            >\n              <Form.Item name={item?.name} label={item.label}>\n                {renderSearchItemByType(type, item)}\n              </Form.Item>\n            </div>\n          )\n      )}\n    </div>\n  )\n\n  return (\n    <Form\n      className='search-area'\n      {...props}\n      onFinish={onSubmit}\n      onFinishFailed={onFailed}\n    >\n      {isInline ? (\n        <div className='inline-flex'>\n          <div className='flex items-center'>{renderFormItems()}</div>\n          <div className='flex items-center'>\n            <Button\n              children={submitText}\n              color='default'\n              htmlType='submit'\n              key='submit'\n              loading={submitButtonLoading}\n            />\n          </div>\n        </div>\n      ) : (\n        <div className='flex flex-col'>\n          <div className='flex-1'>{renderFormItems()}</div>\n          <div className='flex-1'>\n            <Button\n              children={submitText}\n              color='default'\n              htmlType='submit'\n              key='submit'\n              loading={submitButtonLoading}\n            />\n          </div>\n        </div>\n      )}\n    </Form>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Form as AntdForm } from 'antd'\n\nimport FormGenerator from './form-generator'\n\nconst { useForm } = AntdForm\n\n// const mockConfigs = [\n//   {\n//     type: 'input',\n//     name: 'simple_text_input',\n//     label: 'Simple Text Input',\n//     placeholder: 'just simple text input type here.'\n//   },\n//   {\n//     type: 'select',\n//     name: 'required_selector',\n//     label: 'Choose to require or not',\n//     placeholder: 'select should we require or not',\n//     showSearch: true,\n//     options: [\n//       { value: true, text: 'required' },\n//       { value: false, text: 'not required' }\n//     ]\n//   }\n// ]\n\nexport default function FormBase() {\n  const form = useForm()\n  const onSubmit = useCallback((result) => {\n    console.log(result)\n  }, [])\n  const onFailed = useCallback((err) => {\n    console.log(err)\n  }, [])\n  const configs = useSelector((state: any) => state?.form?.form?.config)\n  const Form = useCallback(\n    () => (\n      <FormGenerator\n        formItems={configs || []}\n        form={form}\n        onSubmit={onSubmit}\n        onFailed={onFailed}\n      />\n    ),\n    [onSubmit, configs, form]\n  )\n  return (\n    <div className='max-w-md py-4 px-8 bg-white shadow-lg rounded-lg'>\n      <Form />\n    </div>\n  )\n}\n","import React, { ReactChild } from 'react'\nimport cx from 'classnames'\n\nexport default function Card({\n  children,\n  className\n}: {\n  children: ReactChild\n  className: string\n}) {\n  return (\n    <div\n      className={cx(\n        'max-w-md py-4 px-8 bg-white shadow-lg rounded-lg',\n        className\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport 'antd/dist/antd.css'\nimport './styles/tailwind.css'\nimport styles from './styles.module.css'\nimport { Button } from 'antd'\n\n// Form\nimport FormBase from './form'\nimport Card from './card'\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport const AntdButton = () => {\n  return <Button>CONFIRM!!</Button>\n}\n\nexport { FormBase, Card }\n"],"names":["FormGenerator","formItems","submitText","onSubmit","onFailed","isInline","submitButtonLoading","props","renderSearchItemByType","type","item","React","Input","InputNumber","TextArea","rows","Select","options","map","value","text","Option","className","key","DatePicker","rest","RangePicker","format","Error","renderFormItems","Form","Item","name","label","span","onFinish","onFinishFailed","Button","children","color","htmlType","loading","useForm","AntdForm","FormBase","form","useCallback","result","console","log","err","configs","useSelector","state","config","Card","cx","ExampleComponent","styles","test","AntdButton"],"mappings":"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"}